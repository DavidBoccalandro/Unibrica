version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  server:
    build:
      context: .
      dockerfile: Dockerfile-server
    container_name: nest-server
    environment:
      - NODE_ENV=develop
    env_file:
      - .docker.env
    depends_on:
      - postgres
    ports:
      - "4000:4000"
    develop:
      watch:
        - action: sync
          path: ./server
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: .server/package.json
        - action: rebuild
          path: ./Dockerfile-server
        - action: rebuild
          path: ./docker-compose.yml

  # Frontend Angular
  client:
    build:
      context: .
      dockerfile: Dockerfile-client
    container_name: angular-client-dev
    ports:
      - "4200:4200"  # Puerto para el servidor de desarrollo de Angular
    environment:
      - NODE_ENV=development
    #command: npm run start
    develop:
      watch:
        - action: sync
          path: ./client
          target: /usr/src/app
          ignore:
            - node_modules/
        - action: rebuild
          path: client/package.json
    depends_on:
      - server

  # pgAdmin service
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: aerocmc@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 3Tristestigres
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  pgdata:
